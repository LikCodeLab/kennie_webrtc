// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    apply from: "${rootDir}/configs/dependencies/config.gradle"
    apply from: "${rootDir}/configs/dependencies/dependenciesx.gradle"
    apply from: "${rootDir}/configs/tools/gradle/git.gradle"

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repositories/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://jitpack.io' }
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.30"
        // 依赖库版本检测
        classpath "com.github.ben-manes:gradle-versions-plugin:0.36.0"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}


allprojects {
    // 将构建文件统一输出到项目根目录下的 build 文件夹
    setBuildDir(new File(rootDir, "build/${path.replaceAll(':', '/')}"))

    tasks.withType(JavaCompile) {
        // 设置全局编码
        options.encoding = 'UTF-8'
    }
    tasks.withType(Javadoc) {
        // 设置文档编码
        options {
            encoding 'UTF-8'
            charSet 'UTF-8'
            links 'http://docs.oracle.com/javase/7/docs/api'
        }
    }
}


task clean(type: Delete) {
    println("********** clean build **********")
    println("delete project dir: " + rootProject.buildDir)
    rootProject.buildDir.deleteDir()
    def dir = new File(new File(".").getAbsolutePath())
    println("root dir: " + dir.getAbsolutePath())
    dir.eachDirRecurse {
        dir2 ->
            dir2.eachDirMatch(~/build/) {
                directory ->
                    println("delete child dir:" + directory)
                    directory.deleteDir()
            }
    }
}